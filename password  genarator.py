# -*- coding: utf-8 -*-
"""Untitled2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1a2kx4Dru848oziLo_PmdFHfTsuBSDmZr
"""

import random
import string

def generate_password(length, use_special_chars, use_numbers):
    characters = string.ascii_letters
    if use_special_chars:
        characters += string.punctuation
    if use_numbers:
        characters += string.digits

    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def generate_multiple_passwords(num_passwords, min_length, max_length, use_special_chars, use_numbers):
    passwords = []
    for _ in range(num_passwords):
        length = random.randint(min_length, max_length)
        password = generate_password(length, use_special_chars, use_numbers)
        passwords.append(password)
    return passwords

def main():
    print("Password Generator")
    num_passwords = int(input("Enter the number of passwords to generate: "))
    min_length = int(input("Enter the minimum password length: "))
    max_length = int(input("Enter the maximum password length: "))
    use_special_chars = input("Include special characters (yes/no): ").lower() == "yes"
    use_numbers = input("Include numbers (yes/no): ").lower() == "yes"

    passwords = generate_multiple_passwords(num_passwords, min_length, max_length, use_special_chars, use_numbers)

    print("\nGenerated Passwords:")
    for i, password in enumerate(passwords, 1):
        print(f"Password {i}: {password}")

if __name__ == "__main__":
    main()
2